// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Personkartotek.Models.Context;

namespace Personkartotek.Migrations
{
    [DbContext(typeof(ModelsContext))]
    [Migration("20181128232940_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Personkartotek.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AddressId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressType");

                    b.Property<int>("CityId")
                        .HasColumnName("CityId");

                    b.Property<string>("HouseNumber")
                        .IsRequired();

                    b.Property<string>("StreetName")
                        .IsRequired();

                    b.HasKey("AddressId");

                    b.HasIndex("CityId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Personkartotek.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CityId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<string>("Postalcode")
                        .IsRequired();

                    b.Property<string>("ProvinceState")
                        .IsRequired();

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Personkartotek.Models.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmailId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("Email");

                    b.Property<string>("EmailType");

                    b.Property<int>("PersonId")
                        .HasColumnName("PersonId");

                    b.HasKey("EmailId");

                    b.HasIndex("PersonId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("Personkartotek.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnName("AddressId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2147483647);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telephone")
                        .IsRequired();

                    b.HasKey("PersonId");

                    b.HasIndex("AddressId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Personkartotek.Models.Address", b =>
                {
                    b.HasOne("Personkartotek.Models.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .HasConstraintName("fk_Address");
                });

            modelBuilder.Entity("Personkartotek.Models.Email", b =>
                {
                    b.HasOne("Personkartotek.Models.Person", "Person")
                        .WithMany("Emails")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("fk_Email");
                });

            modelBuilder.Entity("Personkartotek.Models.Person", b =>
                {
                    b.HasOne("Personkartotek.Models.Address", "Address")
                        .WithMany("PersonsResidingAtAddress")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("fk_Person");
                });
#pragma warning restore 612, 618
        }
    }
}
